    ifnd VDP_I68
VDP_I68: equ 0

    ; for wait vblank macro
    xref sys_vblank_flag


VDP_TILELEN_L: equ 8
VDP_TILELEN_W: equ VDP_TILELEN_L*2
VDP_TILELEN_B: equ VDP_TILELEN_W*2

; vdp ports
VDP_DATA: equ $00C00000
VDP_CTRL: equ $00C00004

; vdp registers
VDPR_DMA_LENL:  equ $9300
VDPR_DMA_LENH:  equ $9400
VDPR_DMA_SRCL:  equ $9500
VDPR_DMA_SRCM:  equ $9600
VDPR_DMA_SRCH:  equ $9700

VDP_DMA_VRAM:   equ $40000080
VDP_DMA_CRAM:   equ $C0000080
VDP_DMA_VSRAM:  equ $40000090

; vdp plane sizes
VDP_PLANE_W32:  equ %00000000
VDP_PLANE_W64:  equ %00000001
VDP_PLANE_W128: equ %00000011
VDP_PLANE_H32:  equ %00000000
VDP_PLANE_H64:  equ %00010000
VDP_PLANE_H128: equ %00110000

; vdp scroll types
VDP_XSCROLL_FULL:  equ %00000000
VDP_XSCROLL_TILE:  equ %00000010
VDP_XSCROLL_LINE:  equ %00000011
VDP_YSCROLL_FULL:  equ %00000000
VDP_YSCROLL_2TILE: equ %00000100

; vdp access equates
;                [CD3] [CD2] [CD1] [RW/CD0]
VDP_WRITE_VRAM:  equ %00000001
VDP_WRITE_CRAM:  equ %00000011
VDP_WRITE_VSRAM: equ %00000101
VDP_READ_VRAM:   equ %00000000
VDP_READ_CRAM:   equ %00001000
VDP_READ_VSRAM:  equ %00000100

; vdp memory sizes
VDP_VRAM_SIZE: equ $10000
VDP_CRAM_SIZE: equ 128
VDP_VSRAM_SIZE: equ 80

; ................................ ;
; prepare vdp for accessing memory ;
; ................................ ;
VDP_LOAD_ADDR: macro ; access, address
    ; full 0st00000 00000000 00000000 0xyz0000

    move.l      #( (\1&%11)<<30 | (\2&$3FFF)<<16 | (\1&%11100)<<2 | (\2>>14) ), VDP_CTRL
    endm


VDP_LOAD_ADDR_R: macro ; access, address:reg, dest:reg
    ; addr ABCDEFGH IJKLMNOP

    move.l      \2, \3 ; temp = 00000000 00000000 ABCDEFGH IJKLMNOP

    lsl.l       #2, \3 ; temp = 00000000 000000AB CDEFGHIJ KLMNOP00
    lsr.w       #2, \3 ; temp = 00000000 000000AB 00CDEFGH IJKLMNOP
    swap        \3     ; temp = 00CDEFGH IJKLMNOP 00000000 000000AB
    or.l        #( (\1 & %11)<<30 | (\1&%11100)<<2 ), \3 ; or in the CD values
    move.l      \3, VDP_CTRL
    endm
; ......................... ;
; wait for vblank to happen ;
; ......................... ;
VDP_WAIT_VBLANK: macro
    move.b      #1, sys_vblank_flag
.\@:
    tst.b       sys_vblank_flag
    bne .\@
    endm


    endif
